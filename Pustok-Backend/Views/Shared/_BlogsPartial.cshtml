@model Paginate<BlogVM>


<style>
    .search-message {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        margin-bottom: 120px;
    }

    .search-title {
        text-align: center;
        color: #bdbbc4;
        font-weight: unset;
        font-size: 20px;
    }

    .description {
        text-align: center;
        color: #bdbbc4;
        font-weight: unset;
        margin-top: 20px;
    }

</style>



@if (Model.Datas.Count != 0)
{
    <div class="blogs">
        <div class="row">
            @foreach (var item in Model.Datas)
            {
                <div class="col-lg-6 col-md-6 mb-lg-6 mb-3">
                    <div class="blog-card">
                        <div class="blog-image">
                            <a asp-controller="Blog" asp-action="Detail" asp-route-id="@item.Id">
                                <img src="~/assets/images/@item.Image" alt="" />
                            </a>
                        </div>
                        <div class="card-content">
                            <h3 class="title">
                                <a asp-controller="Blog" asp-action="Detail" asp-route-id="@item.Id">
                                    @item.Title.Substring(0, (int)Math.Ceiling((item.Title.Length * 0.4)))
                                </a>
                            </h3>
                            <p>
                                <span class="date">@item.CreatedDate.ToString("MM/dd/yyyy") </span>|
                                <a class="author">@item.Author</a>
                            </p>
                            <p class="desc">
                                @item.Description.Substring(0, (int)Math.Ceiling((item.Description.Length * 0.08)))
                            </p>
                            <a asp-controller="Blog" asp-action="Detail" asp-route-id="@item.Id" class="blog-link">Read More</a>
                        </div>
                    </div>
                </div>

            }

        </div>
    </div>

    @if (Model.Datas.Count != 0 && Model.TotalPage > 1)
    {
        <div class="pagination">
            <nav aria-label="...">
                <ul class="pagination">
                    <li class="page-item  @(Model.HasPrevious ? "" : "disabled")">
                        <a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage - 1)">
                            Previous
                        </a>
                    </li>

                    @for (int i = 1; i <= Model.TotalPage; i++)
                    {
                        <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                            <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
                        </li>

                    }

                    <li class="page-item  @(Model.HasNext ? "" : "disabled")">
                        <a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage + 1)">
                            Next
                        </a>
                    </li>


                </ul>
            </nav>
        </div>
    }
}

else
{
    <div class="search-message">
        <h1 class="search-title">No Results Found</h1>
        <p class="description">We couldn't find any results for your search. Please try again with different keywords.</p>
    </div>
}


